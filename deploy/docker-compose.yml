
name: bell-project

services:
  web:
    build: 
      context: ../../
      dockerfile: Bell/deploy/Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ../.env
    volumes:
      - static_volume:/app/backend/static
      - media_volume:/app/backend/media
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: mysql:8.0
    volumes:
      - mysql_data:/var/lib/mysql
    env_file:
      - ../.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  nginx:
    image: nginx:1.21
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/static:ro
      - media_volume:/app/media:ro
      - ../bell_admin/dist:/app/frontend:ro
    depends_on:
      web:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    name: bell_mysql_data
  static_volume:
    name: bell_static_volume
  media_volume:
    name: bell_media_volume 